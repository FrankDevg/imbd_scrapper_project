version: "3.9"

services:
  postgres:
    image: postgres:15
    container_name: imdb_postgres
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./sql:/docker-entrypoint-initdb.d
    networks:
      - app_net

  tor:
    image: dperson/torproxy
    container_name: tor_proxy
    ports:
      - "9050:9050"
    command: "-p 9050"
    networks:
      - app_net

  vpn:
    image: qmcgaw/gluetun
    container_name: vpn
    cap_add:
      - NET_ADMIN
    environment:
      - VPN_SERVICE_PROVIDER=protonvpn
      - OPENVPN_USER=${VPN_USERNAME}
      - OPENVPN_PASSWORD=${VPN_PASSWORD}
      - SERVER_COUNTRIES=Argentina
    ports:
      - "8888:8888" 
    networks:
      - vpn_net

  scraper:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: imdb_scraper
    depends_on:
      - postgres
      - tor
      - vpn
    networks:
      - app_net
      - vpn_net
    env_file:
      - .env
    volumes:
      - .:/app
    command: >
      sh -c "
        echo 'Esperando a que Postgres est√© listo...' &&
        while ! nc -z postgres 5432; do sleep 1; done &&
        echo 'Postgres listo. Iniciando scraper...' &&
        python presentation/cli/run_scraper.py &&
        echo 'Scraper finalizado. Ejecutando queries.sql...' &&
        apt update && apt install -y postgresql-client &&
        PGPASSWORD=$POSTGRES_PASSWORD psql -h postgres -U $POSTGRES_USER -d $POSTGRES_DB -f sql/queries.sql &&
        echo 'Consultas SQL ejecutadas. Manteniendo contenedor activo...' &&
        tail -f /dev/null
      "

volumes:
  pgdata:

networks:
  app_net:
    driver: bridge
  vpn_net:
    driver: bridge
